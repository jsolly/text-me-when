---
import FormInputs from "./FormInputs.astro";
import NotificationCheckbox from "./NotificationCheckbox.astro";
import NotificationCategory from "./NotificationCategory.astro";
---

<div class="bg-white rounded-xl shadow-lg p-8 max-w-md w-full">
  <h1 class="text-3xl font-bold text-slate-800 mb-2">Text Me When...</h1>
  <p class="text-slate-600 mb-6">Choose events you'd like to receive text notifications about.</p>
  
  <form class="space-y-6">
    <div class="space-y-6">
      <section>
        <h2 class="text-lg font-semibold text-slate-800 mb-4">Contact Information</h2>
        <div class="space-y-4">
          <FormInputs 
            label="Phone Number"
            id="phone"
            type="tel"
            placeholder="(555) 555-5555"
            pattern="[\(]\d{3}[\)]\s\d{3}[\-]\d{4}"
          />

          <FormInputs 
            label="City"
            id="city"
            type="text"
            placeholder="Enter your city"
          />

          <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">
              Preferred Notification Time
            </label>
            <select 
              name="notification-time" 
              class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="morning">Morning (8 AM)</option>
              <option value="afternoon">Afternoon (2 PM)</option>
              <option value="evening">Evening (7 PM)</option>
            </select>
            <p class="mt-1 text-sm text-slate-500">
              You'll receive all notifications at this time each day
            </p>
          </div>
        </div>
      </section>

      <section>
        <h2 class="text-lg font-semibold text-slate-800 mb-4">Notification Preferences</h2>
        <div class="space-y-6">
          <notification-category label="Astrological Events">
            <notification-checkbox>
              <NotificationCheckbox 
                id="astrological" 
                label="All astrological events" 
                description="Get notified about meteor showers, full moons, eclipses, and more"
              />
            </notification-checkbox>
            <div class="ml-8 space-y-3 mt-3" data-subcategories>
              <notification-checkbox>
                <NotificationCheckbox id="meteor" label="Meteor shower alerts" />
              </notification-checkbox>
              <notification-checkbox>
                <NotificationCheckbox id="fullmoon" label="Full moon" />
              </notification-checkbox>
              <notification-checkbox>
                <NotificationCheckbox id="newmoon" label="New moon" />
              </notification-checkbox>
              <notification-checkbox>
                <NotificationCheckbox id="eclipse" label="Solar/Lunar eclipses" />
              </notification-checkbox>
            </div>
          </notification-category>

          <notification-category label="Historical Facts">
            <notification-checkbox>
              <NotificationCheckbox 
                id="historical" 
                label="All historical facts" 
                description="Get daily facts about science, space, technology, and culture"
              />
            </notification-checkbox>
            <div class="ml-8 space-y-3 mt-3" data-subcategories>
              <notification-checkbox>
                <NotificationCheckbox 
                  id="history-science" 
                  label="Science & Discovery" 
                  description="Notable scientific breakthroughs and discoveries"
                />
              </notification-checkbox>
              <notification-checkbox>
                <NotificationCheckbox 
                  id="history-space" 
                  label="Space Exploration" 
                  description="Milestones in space exploration and astronomy"
                />
              </notification-checkbox>
              <notification-checkbox>
                <NotificationCheckbox 
                  id="history-tech" 
                  label="Technology" 
                  description="Important moments in technological advancement"
                />
              </notification-checkbox>
              <notification-checkbox>
                <NotificationCheckbox 
                  id="history-culture" 
                  label="Culture & Society" 
                  description="Significant cultural and societal events"
                />
              </notification-checkbox>
            </div>
          </notification-category>
        </div>
      </section>
    </div>

    <button type="submit" 
      class="w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors font-medium">
      Sign Up for Notifications
    </button>

    <p class="text-xs text-slate-500 text-center">
      By signing up, you agree to receive text messages about your selected events. 
      Message and data rates may apply.
    </p>
  </form>
</div>

<script>
  import { initializeNotificationTimings } from '../scripts/notification-timing';
  
  class NotificationForm {
    masterCheckbox: HTMLInputElement | null;
    allCheckboxes: NodeListOf<HTMLInputElement>;

    constructor() {
      this.masterCheckbox = document.querySelector('[data-master-checkbox]');
      this.allCheckboxes = document.querySelectorAll('input[type="checkbox"]:not([data-master-checkbox]):not([data-category-checkbox])');
      this.init();
    }

    init() {
      if (!this.masterCheckbox) return;

      // Handle master checkbox changes
      this.masterCheckbox.addEventListener('change', () => {
        this.allCheckboxes.forEach(checkbox => {
          checkbox.checked = this.masterCheckbox!.checked;
          checkbox.dispatchEvent(new Event('change'));
        });
      });

      // Update master checkbox based on individual selections
      this.allCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', () => {
          this.updateMasterCheckbox();
        });
      });
    }

    updateMasterCheckbox() {
      if (!this.masterCheckbox) return;
      
      const totalCheckboxes = this.allCheckboxes.length;
      const checkedCheckboxes = Array.from(this.allCheckboxes).filter(cb => cb.checked).length;
      
      this.masterCheckbox.checked = totalCheckboxes === checkedCheckboxes;
      this.masterCheckbox.indeterminate = checkedCheckboxes > 0 && checkedCheckboxes < totalCheckboxes;
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    initializeNotificationTimings();
    new NotificationForm();
  });
</script> 